{"version":3,"file":"limited.modern.js","sources":["../src/Vector.js","../src/GameObject.js","../src/Keyboard.js","../src/State.js","../src/Text.js","../src/Screen.js","../src/main.js"],"sourcesContent":["export default class Vector {\n    constructor({\n        x, y\n    }) {\n        this.x = x;\n        this.y = y;\n    }\n    plus(other) {\n        return new Vector({\n          x: this.x + other.x, \n          y: this.y + other.y\n        });\n      }\n}","import Vector from './Vector.js';\n\nexport default class GameObject {\n    constructor({\n        name,\n        type,\n        position,\n        width,\n        height,\n        color,\n        speed\n    }) {\n        this.name = name;\n        this.type = type;\n        this.position = position || new Vector({ x: 0, y: 0 })\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.speed = speed || new Vector({ x: 0, y: 0});\n    }\n\n    getCenter() {\n        return new Vector({\n            x: this.position.x + this.width / 2,\n            y: this.position.y + this.height / 2\n        })\n    }\n\n    update(dt) {\n        return new GameObject({\n            ...this,\n            position: new Vector({\n                x: this.position.x + (this.speed.x * dt),\n                y: this.position.y + (this.speed.y * dt)\n            }),\n        })\n    }\n}","export const keyCodes = {\n    UP: 38,\n    DOWN: 40,\n    RIGHT: 39,\n    LEFT: 37,\n    W: 87,\n    A: 65,\n    S: 83,\n    D: 68,\n    SPACE: 32\n}\n\nexport default class Keyboard {\n    keyState = {};\n\n    constructor() { \n        window.addEventListener(\"keydown\", this.keyDownHandler);\n\n        window.addEventListener(\"keyup\", this.keyUpHandler);\n    }\n\n    keyDownHandler = (event) => {\n        event.preventDefault();\n        this.keyState[event.keyCode || event.which] = true;\n    }\n\n    keyUpHandler = (event) => {\n        event.preventDefault();\n        this.keyState[event.keyCode || event.which] = false;\n    }\n}\n","import GameObject from \"./GameObject.js\";\nimport Keyboard from \"./Keyboard.js\";\n\nexport default class State {\n\n    /**\n     * \n     * @param {{\n     *  gameObjects: GameObject[],\n     *  state: State\n     * }} param0 \n     */\n    constructor({ gameObjects, textObjects, state }) {\n        this.gameObjects = gameObjects;\n        this.textObjects = textObjects;\n        this.state = state;\n        this.keyboard = new Keyboard();\n    }\n\n    setGameObjects(go) {\n        this.gameObjects = go;\n    }\n\n    getGameObject(name) {\n        return this.gameObjects.find((go) => go.name === name);\n    }\n\n    getGameObjectsByType(type) {\n        return this.gameObjects.map((go) => go.type === type);\n    }\n\n    /**\n     * @returns {GameObject[]} gameObjects\n     */\n    getGameObjects() {\n        return this.gameObjects;\n    }\n\n    getTextObject(label) {\n        return this.textObjects.find((to) => to.label === label);\n    }\n\n    deleteTextObject(label) {\n        const index = this.textObjects.findIndex((to) => to.label === label);\n        \n        if (index !== -1) {\n            this.textObjects.splice(index, 1);\n        }\n    }\n\n    /**\n     * @param {number} dt \n     * @returns {State}\n     */\n    update(dt) {\n        const updatedGameObjects = [];\n        for (const go of this.gameObjects) {\n            updatedGameObjects.push(go.update(dt));\n        }\n\n        return new State({ ...this, gameObjects: updatedGameObjects });\n    }\n}","import Vector from \"./Vector.js\";\n\nexport default class Text {\n    /**\n     * \n     * @param {{\n     *  content: string\n     *  position: Vector\n     *  font: string\n     * label: string\n     * }} param0 \n     */\n    constructor({ content, label, position, font = '18px verdana' }) {\n        Object.assign(this, { content, label, position, font });\n    }\n\n    /**\n     * \n     * @param {CanvasRenderingContext2D} context \n     */\n    write(context) {\n        context.font = this.font;\n        context.fillText(this.content, this.position.x, this.position.y);\n    }\n\n    update(newContent) {\n        this.content = newContent;\n\n        return this;\n    }\n}","import GameObject from './GameObject.js';\nimport Text from './Text.js';\n\nexport default class GameScreen {\n    constructor({ canvasId, width, height }) {\n        this.canvas = document.getElementById(canvasId);\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.context = this.canvas.getContext('2d');\n        \n    }\n\n    clear() {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    /**\n     * \n     * @param {GameObject[]} currentGameObjects \n     * @param {GameObject[]} previousGameObjects \n     * @param {number} interpolation\n     */\n    renderObjects(currentGameObjects, previousGameObjects, interpolation) {\n\n        for (const object of currentGameObjects) {\n            const { name, width, height, color } = object;\n            let { x, y } = object.position;\n\n            if (name === undefined) throw Error('name not found');\n            if (x === undefined) throw Error('x not found');\n            if (y === undefined) throw Error('y not found');\n            if (width === undefined) throw Error('width not found');\n            if (height === undefined) throw Error('height not found');\n            if (color === undefined) throw Error('color not found');\n\n            if (previousGameObjects.length) {\n                const previousGo = previousGameObjects.find((go) => go.name === name);\n                if (previousGo) {\n                    const prevX = previousGo.position.x;\n                    const prevY = previousGo.position.y;\n\n                    x = x * interpolation + prevX * (1 - interpolation);\n                    y = y * interpolation + prevY * (1 - interpolation);\n                }\n            }\n\n            this.context.fillStyle = color;\n            this.context.fillRect(x, y, width, height);\n        }\n    }\n\n    /**\n     * \n     * @param {Text[]} texts \n     */\n    write(texts) {\n        for (const text of texts) {\n            text.write(this.context);\n        }\n    }\n}","import GameScreen from \"./Screen.js\";\nimport State from \"./State.js\";\nimport Text from './Text.js';\n\nconst\n    ONE_SECOND = 1000,\n    UPDATES_PER_SECOND = 60;\n\nconst settings = {\n    currentFps: 1,\n    framesThisSecond : 0,\n    lastFpsUpdate: 0,\n    decayRatio: 0.25,\n    MS_PER_UPDATE: Number((ONE_SECOND / UPDATES_PER_SECOND).toFixed(1))\n};\n\n/**\n * \n * @param {{\n *  firstState: State\n *  screen: GameScreen\n *  update: Function\n * }} param0 \n */\nexport function start({ firstState, screen, update }) {\n    const \n        gameStates = [firstState],\n        timeStep = settings.MS_PER_UPDATE;\n    \n    let lag = 0.0, \n        previousTime = window.performance.now();\n\n    const gameLoop = (currentTime) => {\n        const elapsedTime = currentTime - previousTime;\n        previousTime = currentTime;\n        lag += elapsedTime;\n        \n        if (currentTime > settings.lastFpsUpdate + ONE_SECOND) {\n            /**\n             * Weighted moving average to calculate FPS\n             * https://gamedev.stackexchange.com/questions/141325/finding-average-input-value-over-time-in-seconds\n             * \n             * https://stackoverflow.com/questions/4687430/c-calculating-moving-fps\n             */\n            settings.currentFps = settings.decayRatio * settings.framesThisSecond + (1 - settings.decayRatio) * settings.currentFps;\n\n            settings.lastFpsUpdate = currentTime;\n            settings.framesThisSecond = 0;\n        }\n        settings.framesThisSecond++;\n\n        while (lag >= timeStep) {\n\n            const previousState = gameStates[gameStates.length - 1];\n            const currentState = update({ state: previousState, dt: timeStep });\n            // const currentState = previousState.update(timeStep);\n            gameStates.push(currentState);\n            \n            lag -= timeStep;\n        }\n\n        const currentState = gameStates[gameStates.length - 1];\n        render(\n            screen,\n            { \n                currentState: currentState, \n                previousState: gameStates[gameStates.length - 2],\n                texts: [\n                    new Text({ \n                        content: `FPS: ${Math.round(settings.currentFps)}`,\n                        position: { x: 1400, y: 30 },\n                        label: 'FPS'\n                    }),\n                    ...currentState.textObjects\n                ],\n                interpolation:  lag / settings.MS_PER_UPDATE\n            }\n        );\n\n        window.requestAnimationFrame(gameLoop);\n    };\n\n    gameLoop(window.performance.now());\n}\n\n/**\n * @param {{\n *  currentState: State\n *  previousState: State\n *  texts: Text[]\n *  interpolation: number\n * }} params\n */\nfunction render(screen, { currentState, previousState, interpolation, texts }) {\n    screen.clear();\n    screen.write(texts);\n\n    const previousGameObjects = previousState ? previousState.getGameObjects() : [];\n    screen.renderObjects(currentState.getGameObjects(), previousGameObjects, interpolation);\n}"],"names":["Vector","constructor","x","y","this","plus","other","GameObject","name","type","position","width","height","color","speed","getCenter","update","dt","keyCodes","UP","DOWN","RIGHT","LEFT","W","A","S","D","SPACE","Keyboard","keyState","keyDownHandler","event","preventDefault","keyCode","which","keyUpHandler","window","addEventListener","State","gameObjects","textObjects","state","keyboard","setGameObjects","go","getGameObject","find","getGameObjectsByType","map","getGameObjects","getTextObject","label","to","deleteTextObject","index","findIndex","splice","updatedGameObjects","push","Text","content","font","Object","assign","write","context","fillText","newContent","GameScreen","canvasId","canvas","document","getElementById","getContext","clear","clearRect","renderObjects","currentGameObjects","previousGameObjects","interpolation","object","undefined","Error","length","previousGo","fillStyle","fillRect","texts","text","settings","currentFps","framesThisSecond","lastFpsUpdate","decayRatio","MS_PER_UPDATE","Number","toFixed","start","firstState","screen","gameStates","timeStep","lag","previousTime","performance","now","gameLoop","currentTime","elapsedTime","currentState","previousState","render","Math","round","requestAnimationFrame"],"mappings":"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"}