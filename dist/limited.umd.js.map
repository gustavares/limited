{"version":3,"file":"limited.umd.js","sources":["../src/Vector.js","../src/GameObject.js","../src/Keyboard.js","../src/State.js","../src/Text.js","../src/Screen.js","../src/main.js","../src/SpriteSheet.js","../src/AnimationState.js"],"sourcesContent":["export default class Vector {\n    constructor({\n        x, y\n    }) {\n        this.x = x;\n        this.y = y;\n    }\n    plus(other) {\n        return new Vector({\n          x: this.x + other.x, \n          y: this.y + other.y\n        });\n      }\n}","import Vector from './Vector.js';\n\nexport default class GameObject {\n    constructor({\n        name,\n        type,\n        position,\n        width,\n        height,\n        color,\n        speed,\n        sprite\n    }) {\n        this.name = name;\n        this.type = type;\n        this.position = position || new Vector({ x: 0, y: 0 })\n        this.width = width;\n        this.height = height;\n        this.color = color;\n        this.speed = speed || new Vector({ x: 0, y: 0});\n        this.sprite = sprite;\n    }\n\n    getCenter() {\n        return new Vector({\n            x: this.position.x + this.width / 2,\n            y: this.position.y + this.height / 2\n        })\n    }\n\n    update(dt) {\n        this.position = new Vector({\n            x: this.position.x + (this.speed.x * dt),\n            y: this.position.y + (this.speed.y * dt)\n        });\n    }\n}","export const keyCodes = {\n    UP: 38,\n    DOWN: 40,\n    RIGHT: 39,\n    LEFT: 37,\n    W: 87,\n    A: 65,\n    S: 83,\n    D: 68,\n    SPACE: 32\n}\n\nexport default class Keyboard {\n    keyState = {};\n\n    constructor() { \n        window.addEventListener(\"keydown\", this.keyDownHandler);\n\n        window.addEventListener(\"keyup\", this.keyUpHandler);\n    }\n\n    keyDownHandler = (event) => {\n        event.preventDefault();\n        this.keyState[event.keyCode || event.which] = true;\n    }\n\n    keyUpHandler = (event) => {\n        event.preventDefault();\n        this.keyState[event.keyCode || event.which] = false;\n    }\n}\n","import GameObject from \"./GameObject.js\";\nimport Keyboard from \"./Keyboard.js\";\n\nexport default class State {\n\n    /**\n     * \n     * @param {{\n     *  gameObjects: GameObject[],\n     *  state: State\n     * }} param0 \n     */\n    constructor({ gameObjects, textObjects, state }) {\n        this.gameObjects = gameObjects;\n        this.textObjects = textObjects;\n        this.state = state;\n        this.keyboard = new Keyboard();\n    }\n\n    setGameObjects(go) {\n        this.gameObjects = go;\n    }\n\n    getGameObject(name) {\n        return this.gameObjects.find((go) => go.name === name);\n    }\n\n    getGameObjectsByType(type) {\n        return this.gameObjects.map((go) => go.type === type);\n    }\n\n    /**\n     * @returns {GameObject[]} gameObjects\n     */\n    getGameObjects() {\n        return this.gameObjects;\n    }\n\n    getTextObject(label) {\n        return this.textObjects.find((to) => to.label === label);\n    }\n\n    deleteTextObject(label) {\n        const index = this.textObjects.findIndex((to) => to.label === label);\n        \n        if (index !== -1) {\n            this.textObjects.splice(index, 1);\n        }\n    }\n\n    /**\n     * @param {number} dt \n     * @returns {State}\n     */\n    update(dt) {\n        this.gameObjects.forEach(go => go.update(dt));\n    }\n}","import Vector from \"./Vector.js\";\n\nexport default class Text {\n    /**\n     * \n     * @param {{\n     *  content: string\n     *  position: Vector\n     *  font: string\n     * label: string\n     * }} param0 \n     */\n    constructor({ content, label, position, font = '18px verdana' }) {\n        Object.assign(this, { content, label, position, font });\n    }\n\n    /**\n     * \n     * @param {CanvasRenderingContext2D} context \n     */\n    write(context) {\n        context.font = this.font;\n        context.fillText(this.content, this.position.x, this.position.y);\n    }\n\n    update(newContent) {\n        this.content = newContent;\n\n        return this;\n    }\n}","import GameObject from './GameObject.js';\nimport Text from './Text.js';\n\nexport default class GameScreen {\n    constructor({ canvasId, width, height }) {\n        this.canvas = document.getElementById(canvasId);\n        this.canvas.width = width;\n        this.canvas.height = height;\n        this.context = this.canvas.getContext('2d');\n        \n    }\n\n    clear() {\n        this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n\n    /**\n     * \n     * @param {GameObject[]} currentGameObjects \n     * @param {GameObject[]} previousGameObjects \n     * @param {number} interpolation\n     */\n    renderObjects(currentGameObjects, previousGameObjects, interpolation) {\n\n        for (const object of currentGameObjects) {\n            const { name, width, height, color, sprite, currentAnimationStateName, position } = object;\n            let { x, y } = position;\n\n            if (name === undefined) throw Error('name not found');\n            if (x === undefined) throw Error('x not found');\n            if (y === undefined) throw Error('y not found');\n            if (width === undefined) throw Error('width not found');\n            if (height === undefined) throw Error('height not found');\n            if (color === undefined) throw Error('color not found');\n\n            if (previousGameObjects.length) {\n                const previousGo = previousGameObjects.find((go) => go.name === name);\n                if (previousGo) {\n                    const prevX = previousGo.position.x;\n                    const prevY = previousGo.position.y;\n\n                    x = x * interpolation + prevX * (1 - interpolation);\n                    y = y * interpolation + prevY * (1 - interpolation);\n                }\n            }\n\n        \n            if (sprite !== undefined) {\n               const spritePosition = sprite.getCurrentSpritePosition();\n               this.context.drawImage(sprite, spritePosition.x * width, spritePosition.y * height, sprite.width, sprite.height, x, y, width, height);\n            } else {\n                this.context.fillStyle = color;\n                this.context.fillRect(x, y, width, height);\n            }\n        }\n    }\n\n    /**\n     * \n     * @param {Text[]} texts \n     */\n    write(texts) {\n        for (const text of texts) {\n            text.write(this.context);\n        }\n    }\n}","import GameScreen from \"./Screen.js\";\nimport State from \"./State.js\";\nimport Text from './Text.js';\n\nconst\n    ONE_SECOND = 1000,\n    UPDATES_PER_SECOND = 60;\n\nconst settings = {\n    currentFps: 1,\n    framesThisSecond : 0,\n    lastFpsUpdate: 0,\n    decayRatio: 0.25,\n    MS_PER_UPDATE: Number((ONE_SECOND / UPDATES_PER_SECOND).toFixed(1))\n};\nexport let framesRendered = 0;\n\n/**\n * \n * @param {{\n *  firstState: State\n *  screen: GameScreen\n *  update: Function\n * }} param0 \n */\nexport function start({ firstState, screen, update }) {\n    const timeStep = settings.MS_PER_UPDATE;\n    \n    let lag = 0.0, \n        previousTime = window.performance.now();\n    let currentState = firstState; \n    let previousState;\n    \n    const gameLoop = (currentTime) => {\n        const elapsedTime = currentTime - previousTime;\n        previousTime = currentTime;\n        lag += elapsedTime;\n        \n        if (currentTime > settings.lastFpsUpdate + ONE_SECOND) {\n            /**\n             * Weighted moving average to calculate FPS\n             * https://gamedev.stackexchange.com/questions/141325/finding-average-input-value-over-time-in-seconds\n             * \n             * https://stackoverflow.com/questions/4687430/c-calculating-moving-fps\n             */\n            settings.currentFps = settings.decayRatio * settings.framesThisSecond + (1 - settings.decayRatio) * settings.currentFps;\n\n            settings.lastFpsUpdate = currentTime;\n            settings.framesThisSecond = 0;\n        }\n        settings.framesThisSecond++;\n\n        while (lag >= timeStep) {\n\n            previousState = currentState;\n            update({ state: currentState, dt: timeStep});\n            currentState.update(timeStep);\n            lag -= timeStep;\n        }\n\n        framesRendered++;\n        render(\n            screen,\n            { \n                currentState,\n                previousState,\n                texts: [\n                    new Text({ \n                        content: `FPS: ${Math.round(settings.currentFps)}`,\n                        position: { x: 1400, y: 30 },\n                        label: 'FPS'\n                    }),\n                    ...currentState.textObjects\n                ],\n                interpolation:  lag / settings.MS_PER_UPDATE\n            }\n        );\n\n        window.requestAnimationFrame(gameLoop);\n    };\n\n    gameLoop(window.performance.now());\n}\n\n/**\n * @param {{\n *  currentState: State\n *  previousState: State\n *  texts: Text[]\n *  interpolation: number\n * }} params\n */\nfunction render(screen, { currentState, previousState, interpolation, texts }) {\n    screen.clear();\n    screen.write(texts);\n\n    const previousGameObjects = previousState ? previousState.getGameObjects() : [];\n    screen.renderObjects(currentState.getGameObjects(), previousGameObjects, interpolation);\n}","import { framesRendered } from './main.js';\nconst STAGGER_FRAMES = 6;\n\nexport default class SpriteSheet extends Image {\n    constructor({\n        spriteSheetWidth,\n        spriteSheetHeight,\n        numberOfSprites,\n        maxSpritesPerRow,\n        numberOfRows,\n        currentAnimationStateName,\n        animationStates,\n        src\n    }) {\n        super(spriteSheetWidth/maxSpritesPerRow, spriteSheetHeight/numberOfRows);\n        this.maxSpritesPerRow = maxSpritesPerRow;\n        this.numberOfSprites = numberOfSprites;\n        this.numberOfRows = numberOfRows;\n        this.spriteSheetWidth = spriteSheetWidth;\n        this.spriteSheetHeight = spriteSheetHeight;\n        this.currentAnimationStateName = currentAnimationStateName;\n        this.animationStates = animationStates;\n        this.src = src;\n    }\n\n    getCurrentSpritePosition() {\n        const currentStateIndex = this.animationStates.findIndex((state) => state.name === this.currentAnimationStateName);\n        const currentState = this.animationStates[currentStateIndex];\n        \n        // todo: if the animation just started should render from the first sprite in the animation sequence\n        const currentAnimationFrame = Math.floor(framesRendered/STAGGER_FRAMES) % currentState.frames;\n\n        return {\n            x: currentAnimationFrame,\n            y: currentStateIndex\n        }\n    }\n}","export default class AnimationState {\n    constructor({\n        name, \n        numberOfFrames\n    }) {\n        this.name = name;\n        this.numberOfFrames = numberOfFrames;\n    }\n}"],"names":["Vector","y","this","x","plus","other","GameObject","type","position","width","height","color","speed","sprite","name","getCenter","update","dt","Keyboard","keyState","keyDownHandler","event","preventDefault","_this","keyCode","which","keyUpHandler","window","addEventListener","State","textObjects","state","gameObjects","keyboard","setGameObjects","go","getGameObject","find","getGameObjectsByType","map","getGameObjects","getTextObject","label","to","deleteTextObject","index","findIndex","splice","forEach","Text","font","Object","assign","content","write","context","fillText","newContent","GameScreen","canvas","document","getElementById","canvasId","getContext","clear","clearRect","renderObjects","currentGameObjects","previousGameObjects","interpolation","object","undefined","Error","length","previousGo","spritePosition","getCurrentSpritePosition","drawImage","fillStyle","fillRect","texts","settings","currentFps","framesThisSecond","lastFpsUpdate","decayRatio","MS_PER_UPDATE","Number","toFixed","framesRendered","SpriteSheet","spriteSheetWidth","spriteSheetHeight","numberOfSprites","maxSpritesPerRow","numberOfRows","currentAnimationStateName","animationStates","src","currentStateIndex","_this2","currentState","Math","floor","frames","Image","numberOfFrames","UP","DOWN","RIGHT","LEFT","W","A","S","D","SPACE","previousState","firstState","screen","timeStep","lag","previousTime","performance","now","gameLoop","currentTime","elapsedTime","render","round","requestAnimationFrame"],"mappings":"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"}